basePath: /backendAPI
definitions:
  handlers.AccountDetailsDTO:
    properties:
      accountNumber:
        type: string
      accountType:
        type: string
      availableBalance:
        type: number
      createdAt:
        type: string
      id:
        type: string
      knownAccounts:
        items:
          $ref: '#/definitions/handlers.KnownAccountDTO'
        type: array
      person:
        $ref: '#/definitions/handlers.PersonDTO'
      username:
        type: string
    type: object
  handlers.AccountLoginDTO:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  handlers.AccountTransactionDTO:
    properties:
      accountId:
        type: string
      amount:
        type: number
      createdAt:
        type: string
      id:
        type: string
      otherAccountId:
        type: string
      transactionType:
        type: string
    type: object
  handlers.KnownAccountDTO:
    properties:
      accountHolder:
        type: string
      accountNumber:
        type: string
      accountType:
        type: string
    type: object
  handlers.PersonDTO:
    properties:
      firstName:
        type: string
      lastName:
        type: string
    type: object
  handlers.TransactionRequest:
    properties:
      amount:
        type: number
      fromAccount:
        type: string
      toAccount:
        type: string
    type: object
  utils.ErrorMessage:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
  description: This is a simple wallet API
  title: Wallet API
  version: "1.0"
paths:
  /accounts/{accountId}:
    get:
      consumes:
      - application/json
      description: Retrieves the details of a specific account by its ID.
      parameters:
      - description: Account ID
        in: path
        name: accountId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful retrieval of account details
          schema:
            $ref: '#/definitions/handlers.AccountDetailsDTO'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
      summary: Get account details
      tags:
      - accounts
  /accounts/{accountId}/transactions:
    get:
      consumes:
      - application/json
      description: Retrieves a list of transactions for a specific account by its
        ID.
      parameters:
      - description: Account ID
        in: path
        name: accountId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful retrieval of account transactions
          schema:
            items:
              $ref: '#/definitions/handlers.AccountTransactionDTO'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
      summary: Get account transactions
      tags:
      - transactions
  /accounts/login:
    post:
      consumes:
      - application/json
      description: Logs in a user with the provided username and password.
      parameters:
      - description: Login payload
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.AccountLoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful login
          schema:
            $ref: '#/definitions/handlers.AccountDetailsDTO'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
      summary: Login
      tags:
      - accounts
  /transactions:
    post:
      consumes:
      - application/json
      description: Adds a new transaction to the system.
      parameters:
      - description: Transaction request
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/handlers.TransactionRequest'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: string
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
      summary: Add a new transaction
      tags:
      - transactions
swagger: "2.0"
