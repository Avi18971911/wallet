basePath: /backendAPI
definitions:
  dto.AccountBalanceHistoryRequestDTO:
    properties:
      bankAccountId:
        description: The bank account ID of the account associated with the transactions
        type: string
      fromTime:
        description: The start time of the transactions in an RFC3339 compliant format
        type: string
      toTime:
        description: The end time of the transactions in an RFC3339 compliant format
        type: string
    required:
    - bankAccountId
    - fromTime
    - toTime
    type: object
  dto.AccountBalanceHistoryResponseDTO:
    properties:
      bankAccountId:
        description: The bank account ID of the account associated with the transactions
        type: string
      months:
        description: The list of account balance months
        items:
          $ref: '#/definitions/dto.AccountBalanceMonthDTO'
        type: array
    required:
    - bankAccountId
    - months
    type: object
  dto.AccountBalanceMonthDTO:
    properties:
      availableBalance:
        description: The available balance of the account at the end of the given
          month. Valid to two decimal places.
        type: string
      month:
        description: The month of the account balance
        type: integer
      pendingBalance:
        description: The pending balance of the account at the end of the given month.
          Valid to two decimal places.
        type: string
      year:
        description: The year of the account balance
        type: integer
    required:
    - availableBalance
    - month
    - pendingBalance
    - year
    type: object
  dto.AccountDetailsResponseDTO:
    properties:
      bankAccounts:
        description: The list of bank accounts associated with the account holder
        items:
          $ref: '#/definitions/dto.BankAccountDTO'
        type: array
      createdAt:
        description: The creation timestamp of the account
        type: string
      id:
        description: The unique identifier of the account
        type: string
      knownBankAccounts:
        description: The list of bank accounts known to and recognized by the account
          holder
        items:
          $ref: '#/definitions/dto.KnownBankAccountDTO'
        type: array
      person:
        allOf:
        - $ref: '#/definitions/dto.PersonDTO'
        description: The account holder associated with the account
      username:
        description: The username associated with the account
        type: string
    required:
    - bankAccounts
    - createdAt
    - id
    - knownBankAccounts
    - person
    - username
    type: object
  dto.AccountLoginRequestDTO:
    properties:
      password:
        description: The password for the login
        type: string
      username:
        description: The username for the login
        type: string
    required:
    - password
    - username
    type: object
  dto.AccountTransactionResponseDTO:
    properties:
      amount:
        description: The amount involved in the transaction. Valid to two decimal
          places.
        type: string
      bankAccountId:
        description: The primary bank account ID associated with the transaction
        type: string
      createdAt:
        description: The timestamp of when the transaction was created
        type: string
      expirationDate:
        description: The expiration date of the pending transaction. Null if not a
          pending transaction.
        type: string
      id:
        description: The unique identifier of the transaction
        type: string
      otherBankAccountId:
        description: The other bank account ID involved in the transaction
        type: string
      status:
        allOf:
        - $ref: '#/definitions/model.PendingTransactionStatus'
        description: The status of the pending transaction (active, applied, revoked).
          Null if not a pending transaction.
      transactionNature:
        allOf:
        - $ref: '#/definitions/model.TransactionNature'
        description: The nature of the transaction (debit or credit)
      transactionType:
        allOf:
        - $ref: '#/definitions/model.TransactionType'
        description: The type of the transaction (realized or pending)
    required:
    - amount
    - bankAccountId
    - createdAt
    - id
    - otherBankAccountId
    - transactionNature
    - transactionType
    type: object
  dto.BankAccountDTO:
    properties:
      accountNumber:
        description: The account number associated with the account
        type: string
      accountType:
        allOf:
        - $ref: '#/definitions/model.BankAccountType'
        description: The type of the account (e.g., savings, checking)
      availableBalance:
        description: The available balance of the account. Valid to two decimal places.
        type: string
      id:
        description: The unique identifier of the account
        type: string
      pendingBalance:
        description: The pending balance of the account. Valid to two decimal places.
        type: string
    required:
    - accountNumber
    - accountType
    - availableBalance
    - id
    - pendingBalance
    type: object
  dto.KnownBankAccountDTO:
    properties:
      accountHolder:
        description: The name of the account holder
        type: string
      accountNumber:
        description: The account number of the known account
        type: string
      accountType:
        description: The type of the account (e.g., savings, checking)
        type: string
      id:
        description: The account ID of the known account
        type: string
    required:
    - accountHolder
    - accountNumber
    - accountType
    - id
    type: object
  dto.PersonDTO:
    properties:
      firstName:
        description: The first name of the person
        type: string
      lastName:
        description: The last name of the person
        type: string
    required:
    - firstName
    - lastName
    type: object
  dto.TransactionRequestDTO:
    properties:
      amount:
        description: The amount to be transferred. Valid to two decimal places.
        type: string
      fromBankAccountId:
        description: The bank account ID of the account from which the amount is to
          be transferred
        type: string
      toBankAccountId:
        description: The bank account ID of the account to which the amount is to
          be transferred
        type: string
    required:
    - amount
    - fromBankAccountId
    - toBankAccountId
    type: object
  model.BankAccountType:
    enum:
    - savings
    - checking
    - investment
    type: string
    x-enum-varnames:
    - Savings
    - Checking
    - Investment
  model.PendingTransactionStatus:
    enum:
    - active
    - applied
    - revoked
    type: string
    x-enum-varnames:
    - Active
    - Applied
    - Revoked
  model.TransactionNature:
    enum:
    - debit
    - credit
    type: string
    x-enum-varnames:
    - Debit
    - Credit
  model.TransactionType:
    enum:
    - realized
    - pending
    type: string
    x-enum-varnames:
    - Realized
    - Pending
  utils.ErrorMessage:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
  description: This is a simple wallet API
  title: Wallet API
  version: "1.0"
paths:
  /accounts/{accountId}/transactions:
    get:
      consumes:
      - application/json
      description: Retrieves a list of transactions for a specific account by its
        ID.
      parameters:
      - description: BankAccount ID
        in: path
        name: accountId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful retrieval of account transactions
          schema:
            items:
              $ref: '#/definitions/dto.AccountTransactionResponseDTO'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
      summary: Get account transactions
      tags:
      - transactions
  /accounts/details/{accountId}:
    get:
      consumes:
      - application/json
      description: Retrieves the details of a specific account by its ID.
      parameters:
      - description: BankAccount ID
        in: path
        name: accountId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful retrieval of account details
          schema:
            $ref: '#/definitions/dto.AccountDetailsResponseDTO'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
      summary: Get account details
      tags:
      - accounts
  /accounts/history:
    get:
      consumes:
      - application/json
      description: Retrieves the account month-balance history for a specific account
        by its ID.
      parameters:
      - description: Account history payload
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.AccountBalanceHistoryRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful retrieval of account history
          schema:
            $ref: '#/definitions/dto.AccountBalanceHistoryResponseDTO'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
      summary: Get account history
      tags:
      - accounts
  /accounts/login:
    post:
      consumes:
      - application/json
      description: Logs in a user with the provided username and password.
      parameters:
      - description: Login payload
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.AccountLoginRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful login
          schema:
            $ref: '#/definitions/dto.AccountDetailsResponseDTO'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
      summary: Login
      tags:
      - accounts
  /transactions:
    post:
      consumes:
      - application/json
      description: Adds a new transaction to the system.
      parameters:
      - description: Transaction request
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/dto.TransactionRequestDTO'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: string
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
      summary: Add a new transaction
      tags:
      - transactions
swagger: "2.0"
